{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inaki\\\\OneDrive\\\\Escritorio\\\\movieapp\\\\client\\\\src\\\\Views\\\\Details\\\\Movie Details\\\\movieDetails.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { getMovieId } from \"../../../Redux/Actions/Movies/movieActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetail = () => {\n  _s();\n  var _movie$description, _movie$genres, _mCast;\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const movie = useSelector(state => state.movieByID);\n  useEffect(() => {\n    dispatch(getMovieId(id));\n  }, [dispatch, id]);\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  ;\n  const regex = /<\\/?[a-z][\\s\\S]*?>/ig;\n  const description = (_movie$description = movie.description) === null || _movie$description === void 0 ? void 0 : _movie$description.replace(regex, \"\");\n  let mGenres = [];\n  (_movie$genres = movie.genres) === null || _movie$genres === void 0 ? void 0 : _movie$genres.forEach(genre => {\n    mGenres.push(genre.name);\n  });\n  let mCast = [];\n  if (!movie.cast) {\n    mCast = \"There is no information about the cast\";\n  } else {\n    var _movie$cast;\n    (_movie$cast = movie.cast) === null || _movie$cast === void 0 ? void 0 : _movie$cast.forEach(element => {\n      mCast.push(element.name);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://image.tmdb.org/t/p/w500/\" + (movie === null || movie === void 0 ? void 0 : movie.image),\n          alt: videogame.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"ID : \", movie === null || movie === void 0 ? void 0 : movie.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Genres: \", mGenres === null || mGenres === void 0 ? void 0 : mGenres.join(\" , \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Cast: \", (_mCast = mCast) === null || _mCast === void 0 ? void 0 : _mCast.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Rating : \", movie === null || movie === void 0 ? void 0 : movie.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Release : \", movie === null || movie === void 0 ? void 0 : movie.release]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieDetail, \"XjDWFoTfF5adYGjfAkqsiNOG2tw=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["useEffect","getMovieId","useDispatch","useSelector","useParams","jsxDEV","_jsxDEV","MovieDetail","_s","_movie$description","_movie$genres","_mCast","id","dispatch","movie","state","movieByID","children","fileName","_jsxFileName","lineNumber","columnNumber","regex","description","replace","mGenres","genres","forEach","genre","push","name","mCast","cast","_movie$cast","element","src","image","alt","videogame","join","rating","release","_c","$RefreshReg$"],"sources":["C:/Users/inaki/OneDrive/Escritorio/movieapp/client/src/Views/Details/Movie Details/movieDetails.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { getMovieId } from \"../../../Redux/Actions/Movies/movieActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst MovieDetail = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const movie = useSelector((state) => state.movieByID);\r\n\r\n    useEffect(() => {\r\n        dispatch(getMovieId(id));\r\n    },[dispatch, id]);\r\n\r\n    if (!movie) {\r\n        return <div>Loading...</div>; \r\n    };\r\n\r\n    const regex = /<\\/?[a-z][\\s\\S]*?>/ig;\r\n    const description = movie.description?.replace(regex,\"\");\r\n\r\n    let mGenres = [];\r\n    movie.genres?.forEach((genre) => {\r\n        mGenres.push(genre.name)\r\n    });\r\n\r\n\r\n    let mCast = [];\r\n    if (!movie.cast) {\r\n        mCast = \"There is no information about the cast\"\r\n    }  else {\r\n        movie.cast?.forEach((element) => {\r\n            mCast.push(element.name);\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div>\r\n          <div>\r\n            <img src={\"https://image.tmdb.org/t/p/w500/\"+ movie?.image} alt={videogame.name}/>\r\n          </div>\r\n          <h5>ID : {movie?.id}</h5>\r\n\r\n          <h5>Genres: {mGenres?.join(\" , \")}</h5>\r\n          \r\n          <h5>Cast: {mCast?.join(\", \")}</h5>\r\n         \r\n          <h5>Rating : {movie?.rating}</h5>\r\n  \r\n          <h5>Release : {movie?.release}</h5>\r\n  \r\n        </div>\r\n        <div>\r\n          <section>\r\n            <h3>{movie.name}</h3>\r\n          </section>\r\n          <p>{description}</p>\r\n        </div>\r\n      </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default MovieDetail;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}