{"ast":null,"code":"import axios from \"axios\";\nimport { GET_POPULAR_SERIES, GET_SERIES_GENRES, GET_SERIES_ID, GET_SERIES_NAME, GET_TOP_RATED_SERIES } from \"./seriesActionTypes\";\nexport const getPopularSeries = () => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.get(\"http://localhost:3001/serie/popular_series\");\n      return dispatch({\n        type: GET_POPULAR_SERIES,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getTopRateSeries = () => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.get(\"http://localhost:3001/serie/top_rated_series\");\n      return dispatch({\n        type: GET_TOP_RATED_SERIES,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getSeriesByName = name => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.get(`http://localhost:3001/serie/name?name=${name}`);\n      return dispatch({\n        type: GET_SERIES_NAME,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getSerieId = id => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.get(`http://localhost:3001/serie/${id}`);\n      return dispatch({\n        type: GET_SERIES_ID,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const getSeriesGenres = () => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.get(\"http://localhost:3001/series_genres\");\n      return dispatch({\n        type: GET_SERIES_GENRES,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"names":["axios","GET_POPULAR_SERIES","GET_SERIES_GENRES","GET_SERIES_ID","GET_SERIES_NAME","GET_TOP_RATED_SERIES","getPopularSeries","dispatch","data","get","type","payload","error","console","log","getTopRateSeries","getSeriesByName","name","getSerieId","id","getSeriesGenres"],"sources":["C:/Users/inaki/OneDrive/Escritorio/movieapp/client/src/Redux/Actions/Series/seriesActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { GET_POPULAR_SERIES, GET_SERIES_GENRES, GET_SERIES_ID, GET_SERIES_NAME, GET_TOP_RATED_SERIES } from \"./seriesActionTypes\";\r\n\r\nexport const getPopularSeries = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios.get(\"http://localhost:3001/serie/popular_series\")\r\n\r\n            return dispatch({\r\n                type: GET_POPULAR_SERIES,\r\n                payload: data\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nexport const getTopRateSeries = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios.get(\"http://localhost:3001/serie/top_rated_series\")\r\n\r\n            return dispatch({\r\n                type: GET_TOP_RATED_SERIES,\r\n                payload: data\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    } \r\n};\r\n\r\nexport const getSeriesByName = (name) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios.get(`http://localhost:3001/serie/name?name=${name}`)\r\n\r\n            return dispatch({\r\n                type: GET_SERIES_NAME,\r\n                payload: data\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    } \r\n}\r\n\r\nexport const getSerieId = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios.get(`http://localhost:3001/serie/${id}`)\r\n\r\n            return dispatch({\r\n                type: GET_SERIES_ID,\r\n                payload: data\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    } \r\n}\r\n\r\nexport const getSeriesGenres = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const { data } = await axios.get(\"http://localhost:3001/series_genres\")\r\n\r\n            return dispatch({\r\n                type: GET_SERIES_GENRES,\r\n                payload: data\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,EAAEC,iBAAiB,EAAEC,aAAa,EAAEC,eAAe,EAAEC,oBAAoB,QAAQ,qBAAqB;AAEjI,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAClC,OAAO,MAAOC,QAAQ,IAAK;IACvB,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,4CAA4C,CAAC;MAE9E,OAAOF,QAAQ,CAAC;QACZG,IAAI,EAAET,kBAAkB;QACxBU,OAAO,EAAEH;MACb,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;EAClC,OAAO,MAAOR,QAAQ,IAAK;IACvB,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,8CAA8C,CAAC;MAEhF,OAAOF,QAAQ,CAAC;QACZG,IAAI,EAAEL,oBAAoB;QAC1BM,OAAO,EAAEH;MACb,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMI,eAAe,GAAIC,IAAI,IAAK;EACrC,OAAO,MAAOV,QAAQ,IAAK;IACvB,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,yCAAwCQ,IAAK,EAAC,CAAC;MAEjF,OAAOV,QAAQ,CAAC;QACZG,IAAI,EAAEN,eAAe;QACrBO,OAAO,EAAEH;MACb,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMM,UAAU,GAAIC,EAAE,IAAK;EAC9B,OAAO,MAAOZ,QAAQ,IAAK;IACvB,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,+BAA8BU,EAAG,EAAC,CAAC;MAErE,OAAOZ,QAAQ,CAAC;QACZG,IAAI,EAAEP,aAAa;QACnBQ,OAAO,EAAEH;MACb,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMQ,eAAe,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOb,QAAQ,IAAK;IACvB,IAAI;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,qCAAqC,CAAC;MAEvE,OAAOF,QAAQ,CAAC;QACZG,IAAI,EAAER,iBAAiB;QACvBS,OAAO,EAAEH;MACb,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}